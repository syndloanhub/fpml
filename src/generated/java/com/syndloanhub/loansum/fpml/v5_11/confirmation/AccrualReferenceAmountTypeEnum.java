//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.20 at 01:58:16 PM EDT 
//


package com.syndloanhub.loansum.fpml.v5_11.confirmation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AccrualReferenceAmountTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AccrualReferenceAmountTypeEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Commitment"/&gt;
 *     &lt;enumeration value="Funded"/&gt;
 *     &lt;enumeration value="Other"/&gt;
 *     &lt;enumeration value="Unfunded"/&gt;
 *     &lt;enumeration value="Unutilized"/&gt;
 *     &lt;enumeration value="Utilized"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "AccrualReferenceAmountTypeEnum")
@XmlEnum
public enum AccrualReferenceAmountTypeEnum {


    /**
     * The accrual is calculated using the facility commitment amount as the reference amount.
     * 
     */
    @XmlEnumValue("Commitment")
    COMMITMENT("Commitment"),

    /**
     * The accrual is calculated using the facility total funded amount as the reference amount.
     * 
     */
    @XmlEnumValue("Funded")
    FUNDED("Funded"),

    /**
     * The accrual is calculated using another type of (calculated) reference amount.
     * 
     */
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * The accrual is calculated using the total facility unfunded amount as the reference amount. The unfunded amount refers to the amount of commitment which has been utilized with unfunded products (e.g. L/Cs).
     * 
     */
    @XmlEnumValue("Unfunded")
    UNFUNDED("Unfunded"),

    /**
     * The accrual is calculated using the facility total unutilized amount as the reference amount. The unutilized amount refers to the amount of commitment which has not yet been borrowed.
     * 
     */
    @XmlEnumValue("Unutilized")
    UNUTILIZED("Unutilized"),

    /**
     * The accrual is calculated using the facility total utilized amount as the reference amount. The utilized amount includes both funded and unfunded borrowings.
     * 
     */
    @XmlEnumValue("Utilized")
    UTILIZED("Utilized");
    private final String value;

    AccrualReferenceAmountTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AccrualReferenceAmountTypeEnum fromValue(String v) {
        for (AccrualReferenceAmountTypeEnum c: AccrualReferenceAmountTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
