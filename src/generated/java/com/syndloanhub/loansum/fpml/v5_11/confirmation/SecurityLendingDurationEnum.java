//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.23 at 12:19:04 PM EDT 
//


package com.syndloanhub.loansum.fpml.v5_11.confirmation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SecurityLendingDurationEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SecurityLendingDurationEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Open"/&gt;
 *     &lt;enumeration value="Term"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SecurityLendingDurationEnum")
@XmlEnum
public enum SecurityLendingDurationEnum {


    /**
     * Indicates that the contract is an open arrangement, which remains in effect unless or until terminated at the option of one or both parties. Repo business rule: When the repo is 'Open', the forward leg MUST NOT be specified. SBL business rule: When a security lending arrangement is 'Open', the termination block ('termination/settlementDate') MUST NOT be specified.
     * 
     */
    @XmlEnumValue("Open")
    OPEN("Open"),

    /**
     * Indicates that a contract is a regular term contract, with a start date and an end date. Repo business rule: When the repo is 'Term', both spot and forward legs MUST be specified. SBL business rule: When a security lending arrangement is 'Term', both the initiation block ('initiation/settlementDate') and the termination block ('termination/settlementDate') MUST be specified.
     * 
     */
    @XmlEnumValue("Term")
    TERM("Term");
    private final String value;

    SecurityLendingDurationEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SecurityLendingDurationEnum fromValue(String v) {
        for (SecurityLendingDurationEnum c: SecurityLendingDurationEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
