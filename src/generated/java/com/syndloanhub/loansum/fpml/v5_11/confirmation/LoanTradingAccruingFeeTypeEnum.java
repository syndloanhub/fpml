//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.23 at 12:19:04 PM EDT 
//


package com.syndloanhub.loansum.fpml.v5_11.confirmation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LoanTradingAccruingFeeTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LoanTradingAccruingFeeTypeEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Commitment"/&gt;
 *     &lt;enumeration value="Facility"/&gt;
 *     &lt;enumeration value="LetterOfCreditIssuance"/&gt;
 *     &lt;enumeration value="Ticking"/&gt;
 *     &lt;enumeration value="Utilization"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LoanTradingAccruingFeeTypeEnum")
@XmlEnum
public enum LoanTradingAccruingFeeTypeEnum {


    /**
     * Calculated as a percentage of the unutilized portion of the facility.
     * 
     */
    @XmlEnumValue("Commitment")
    COMMITMENT("Commitment"),

    /**
     * Calculated as a percentage of the global commitment amount of a facility.
     * 
     */
    @XmlEnumValue("Facility")
    FACILITY("Facility"),

    /**
     * An on-going (accrual) fee paid to the Issuing Bank for a Letter of Credit. This is separate from the basic Letter of Credit Fee paid to the lender group.
     * 
     */
    @XmlEnumValue("LetterOfCreditIssuance")
    LETTER_OF_CREDIT_ISSUANCE("LetterOfCreditIssuance"),

    /**
     * Typically for term loans, a commitment fee that applies to the amount of a commitment that has not yet been drawn down.
     * 
     */
    @XmlEnumValue("Ticking")
    TICKING("Ticking"),

    /**
     * Calculated as a percentage of the utilized portion of the facility. This fee type is subject to banding rules – different portions of the utilization amount may be subject to different percentages.
     * 
     */
    @XmlEnumValue("Utilization")
    UTILIZATION("Utilization");
    private final String value;

    LoanTradingAccruingFeeTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoanTradingAccruingFeeTypeEnum fromValue(String v) {
        for (LoanTradingAccruingFeeTypeEnum c: LoanTradingAccruingFeeTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
