//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.22 at 04:56:49 PM EDT 
//


package com.syndloanhub.loansum.fpml.v5_11.confirmation;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * An abstract base type for all syndicated loan servicing notifications; the wrapper for loan events which occur through the life-cycle of a deal.
 * 
 * <p>Java class for AbstractServicingNotification complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AbstractServicingNotification"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fpml.org/FpML-5/confirmation}CorrectableRequestMessage"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="noticeDate" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="isGlobalOnly" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="eventPayment" type="{http://www.fpml.org/FpML-5/confirmation}EventPayment" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractServicingNotification", propOrder = {
    "noticeDate",
    "isGlobalOnly",
    "eventPayment"
})
@XmlSeeAlso({
    AbstractContractNotification.class
})
public abstract class AbstractServicingNotification
    extends CorrectableRequestMessage
    implements Serializable
{

    private final static long serialVersionUID = 54L;
    @XmlElement(required = true, type = String.class)
    @XmlJavaTypeAdapter(Adapter1 .class)
    @XmlSchemaType(name = "date")
    protected LocalDate noticeDate;
    protected boolean isGlobalOnly;
    protected List<EventPayment> eventPayment;

    /**
     * Gets the value of the noticeDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public LocalDate getNoticeDate() {
        return noticeDate;
    }

    /**
     * Sets the value of the noticeDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNoticeDate(LocalDate value) {
        this.noticeDate = value;
    }

    /**
     * Gets the value of the isGlobalOnly property.
     * 
     */
    public boolean isIsGlobalOnly() {
        return isGlobalOnly;
    }

    /**
     * Sets the value of the isGlobalOnly property.
     * 
     */
    public void setIsGlobalOnly(boolean value) {
        this.isGlobalOnly = value;
    }

    /**
     * Gets the value of the eventPayment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the eventPayment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEventPayment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EventPayment }
     * 
     * 
     */
    public List<EventPayment> getEventPayment() {
        if (eventPayment == null) {
            eventPayment = new ArrayList<EventPayment>();
        }
        return this.eventPayment;
    }

}
